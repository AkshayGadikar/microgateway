{
  "name": "DefaultHttpPattern",
  "steps": [
    {
      "if": "$.conf.useRateLimiter == true",
      "service": "RateLimiter",
      "input": {
        "token": "global"
      }
    },
    {
      "if": "$.conf.useJWT == true",
      "service": "JWTValidator",
      "input": {
        "token": "=$.payload.headers.Authorization",
        "key": "=$.conf.jwtKey"
      }
    },
    {
      "if": "$.conf.useCircuitBreaker == true",
      "service": "CircuitBreaker"
    },
    {
      "if": "$.conf.useJWT == false || $.JWTValidator.outputs.valid == true",
      "service": "HttpBackend",
      "halt": "($.HttpBackend.error != nil) && !error.isneterror($.HttpBackend.error)"
    },
    {
      "if": "$.conf.useCircuitBreaker == true && $.HttpBackend.error != nil",
      "service": "CircuitBreaker",
      "input": {
        "operation": "counter"
      }
    },
    {
      "if": "$.conf.useCircuitBreaker == true && $.HttpBackend.error == nil",
      "service": "CircuitBreaker",
      "input": {
        "operation": "reset"
      }
    }
  ],
  "responses": [
    {
      "if": "$.RateLimiter.outputs.limitReached == true",
      "error": true,
      "output": {
        "code": 403,
        "data": {
          "status": "Rate Limit Exceeded - The service you have requested is over the allowed limit."
        }
      }
    },
    {
      "if": "$.conf.useJWT == true && $.JWTValidator.outputs.valid == false",
      "error": true,
      "output": {
        "code": 401,
        "data": {
          "error": "=$.JWTValidator.outputs.errorMessage"
        }
      }
    },
    {
      "if": "$.conf.useCircuitBreaker == true && $.CircuitBreaker.outputs.tripped == true",
      "error": true,
      "output": {
        "code": 403,
        "data": {
          "error": "circuit breaker tripped"
        }
      }
    },
    {
      "error": false,
      "output": {
        "code": 200,
        "data": "=$.HttpBackend.outputs.result"
      }
    }
  ],
  "services": [
    {
      "name": "RateLimiter",
      "description": "Rate limiter",
      "ref": "github.com/project-flogo/microgateway/activity/ratelimiter",
      "settings": {
        "limit": "=$.conf.rateLimit"
      }
    },
    {
      "name": "JWTValidator",
      "description": "Validate some tokens",
      "ref": "github.com/project-flogo/microgateway/activity/jwt"
    },
    {
      "name": "CircuitBreaker",
      "description": "Circuit breaker service",
      "ref": "github.com/project-flogo/microgateway/activity/circuitbreaker",
      "settings": {
        "mode": "a"
      }
    },
    {
      "name": "HttpBackend",
      "description": "Make an http call to your backend",
      "ref": "github.com/project-flogo/contrib/activity/rest",
      "settings": {
        "method": "GET",
        "uri": "=$.conf.backendUrl"
      }
    }
  ]
}
